{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\vmari\\\\Desktop\\\\Evaluaciones CFT\\\\4to Semestre\\\\FrontEnd\\\\Nota 3- React\\\\calculadora\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport DigitButton from \"./DigitButton\";\nimport OperationButton from \"./OperationButton\";\nimport \"./styles.css\";\nimport { useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\"\n};\nfunction reducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false\n        };\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state;\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state;\n      }\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`\n      };\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state;\n      }\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation\n        };\n      }\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null\n        };\n      }\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null\n      };\n    case ACTIONS.CLEAR:\n      return {};\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null\n        };\n      }\n      if (state.currentOperand == null) return state;\n      if (state.currentOperand.length === 1) {\n        return {\n          ...state,\n          currentOperand: null\n        };\n      }\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1)\n      };\n    case ACTIONS.EVALUATE:\n      if (state.operation == null || state.currentOperand == null || state.previousOperand == null) {\n        return state;\n      }\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state)\n      };\n    case \"key\":\n      if (!payload.key) return state;\n      if (payload.key >= \"0\" && payload.key <= \"9\") {\n        // Si la tecla es un dígito, agrégalo al estado\n        return {\n          ...state,\n          currentOperand: `${state.currentOperand || \"\"}${payload.key}`\n        };\n      } else if (payload.key === \".\") {\n        // Si la tecla es \".\", verifica si ya hay un punto\n        if (!state.currentOperand.includes(\".\")) {\n          return {\n            ...state,\n            currentOperand: `${state.currentOperand || \"\"}${payload.key}`\n          };\n        }\n      } else if (payload.key === \"Enter\") {\n        // Si la tecla es \"Enter\", evalúa la expresión\n        return {\n          ...state,\n          overwrite: true,\n          previousOperand: null,\n          operation: null,\n          currentOperand: evaluate(state)\n        };\n      } else if (payload.key === \"Backspace\") {\n        // Si la tecla es \"Backspace\", borra el último dígito\n        return {\n          ...state,\n          currentOperand: state.currentOperand && state.currentOperand.slice(0, -1)\n        };\n      }\n      return state;\n  }\n}\nfunction evaluate({\n  currentOperand,\n  previousOperand,\n  operation\n}) {\n  const prev = parseFloat(previousOperand);\n  const current = parseFloat(currentOperand);\n  if (isNaN(prev) || isNaN(current)) return \"\";\n  let computation = \"\";\n  switch (operation) {\n    case \"+\":\n      computation = prev + current;\n      break;\n    case \"-\":\n      computation = prev - current;\n      break;\n    case \"*\":\n      computation = prev * current;\n      break;\n    case \"÷\":\n      computation = prev / current;\n      break;\n  }\n  return computation.toString();\n}\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0\n});\nfunction formatOperand(operand) {\n  if (operand == null) return;\n  const [integer, decimal] = operand.split(\".\");\n  if (decimal == null) return INTEGER_FORMATTER.format(integer);\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`;\n}\nfunction App() {\n  _s();\n  const [{\n    currentOperand,\n    previousOperand,\n    operation\n  }, dispatch] = useReducer(reducer, {});\n  useEffect(() => {\n    const handleKeyPress = event => {\n      const key = event.key;\n      if (key >= \"0\" && key <= \"9\") {\n        // Manejar dígitos\n        dispatch({\n          type: \"key\",\n          payload: {\n            key\n          }\n        });\n      } else if (key === \".\") {\n        // Manejar el punto decimal\n        dispatch({\n          type: \"key\",\n          payload: {\n            key\n          }\n        });\n      } else if (key === \"Enter\" || key === \"NumpadEnter\") {\n        // Manejar Enter\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"=\"\n          }\n        });\n      } else if (key === \"Backspace\") {\n        // Manejar retroceso\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"Backspace\"\n          }\n        });\n      } else if (key === \"*\") {\n        // Manejar multiplicación\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"*\"\n          }\n        });\n      } else if (key === \"/\") {\n        // Manejar división\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"/\"\n          }\n        });\n      } else if (key === \"+\") {\n        // Manejar suma\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"+\"\n          }\n        });\n      } else if (key === \"-\") {\n        // Manejar resta\n        dispatch({\n          type: \"key\",\n          payload: {\n            key: \"-\"\n          }\n        });\n      }\n    };\n    document.addEventListener(\"keydown\", handleKeyPress);\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [dispatch]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"calculator-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"output\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"previous-operand\",\n        children: [formatOperand(previousOperand), \" \", operation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"current-operand\",\n        children: formatOperand(currentOperand)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.CLEAR\n      }),\n      children: \"AC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => dispatch({\n        type: ACTIONS.DELETE_DIGIT\n      }),\n      children: \"DEL\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"\\xF7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"1\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"2\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"3\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"*\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"4\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"5\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"6\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"+\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"7\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"8\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"9\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OperationButton, {\n      operation: \"-\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \".\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DigitButton, {\n      digit: \"0\",\n      dispatch: dispatch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"span-two\",\n      onClick: () => dispatch({\n        type: ACTIONS.EVALUATE\n      }),\n      children: \"=\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 214,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"RhnNTUw9kY+yOFSOglIY/c6BdGI=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useReducer","DigitButton","OperationButton","useEffect","jsxDEV","_jsxDEV","ACTIONS","ADD_DIGIT","CHOOSE_OPERATION","CLEAR","DELETE_DIGIT","EVALUATE","reducer","state","type","payload","overwrite","currentOperand","digit","includes","previousOperand","operation","evaluate","length","slice","key","prev","parseFloat","current","isNaN","computation","toString","INTEGER_FORMATTER","Intl","NumberFormat","maximumFractionDigits","formatOperand","operand","integer","decimal","split","format","App","_s","dispatch","handleKeyPress","event","document","addEventListener","removeEventListener","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/vmari/Desktop/Evaluaciones CFT/4to Semestre/FrontEnd/Nota 3- React/calculadora/src/App.js"],"sourcesContent":["import { useReducer } from \"react\"\nimport DigitButton from \"./DigitButton\"\nimport OperationButton from \"./OperationButton\"\nimport \"./styles.css\"\nimport { useEffect } from \"react\";\n\nexport const ACTIONS = {\n  ADD_DIGIT: \"add-digit\",\n  CHOOSE_OPERATION: \"choose-operation\",\n  CLEAR: \"clear\",\n  DELETE_DIGIT: \"delete-digit\",\n  EVALUATE: \"evaluate\",\n}\n\nfunction reducer(state, { type, payload }) {\n  switch (type) {\n    case ACTIONS.ADD_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          currentOperand: payload.digit,\n          overwrite: false,\n        }\n      }\n      if (payload.digit === \"0\" && state.currentOperand === \"0\") {\n        return state\n      }\n      if (payload.digit === \".\" && state.currentOperand.includes(\".\")) {\n        return state\n      }\n\n      return {\n        ...state,\n        currentOperand: `${state.currentOperand || \"\"}${payload.digit}`,\n      }\n    case ACTIONS.CHOOSE_OPERATION:\n      if (state.currentOperand == null && state.previousOperand == null) {\n        return state\n      }\n\n      if (state.currentOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n        }\n      }\n\n      if (state.previousOperand == null) {\n        return {\n          ...state,\n          operation: payload.operation,\n          previousOperand: state.currentOperand,\n          currentOperand: null,\n        }\n      }\n\n      return {\n        ...state,\n        previousOperand: evaluate(state),\n        operation: payload.operation,\n        currentOperand: null,\n      }\n    case ACTIONS.CLEAR:\n      return {}\n    case ACTIONS.DELETE_DIGIT:\n      if (state.overwrite) {\n        return {\n          ...state,\n          overwrite: false,\n          currentOperand: null,\n        }\n      }\n      if (state.currentOperand == null) return state\n      if (state.currentOperand.length === 1) {\n        return { ...state, currentOperand: null }\n      }\n\n      return {\n        ...state,\n        currentOperand: state.currentOperand.slice(0, -1),\n      }\n    case ACTIONS.EVALUATE:\n      if (\n        state.operation == null ||\n        state.currentOperand == null ||\n        state.previousOperand == null\n      ) {\n        return state\n      }\n\n      return {\n        ...state,\n        overwrite: true,\n        previousOperand: null,\n        operation: null,\n        currentOperand: evaluate(state),\n      }\n    \n      case \"key\":\n        if (!payload.key) return state;\n        if (payload.key >= \"0\" && payload.key <= \"9\") {\n          // Si la tecla es un dígito, agrégalo al estado\n          return {\n            ...state,\n            currentOperand: `${state.currentOperand || \"\"}${payload.key}`,\n          };\n        } else if (payload.key === \".\") {\n          // Si la tecla es \".\", verifica si ya hay un punto\n          if (!state.currentOperand.includes(\".\")) {\n            return {\n              ...state,\n              currentOperand: `${state.currentOperand || \"\"}${payload.key}`,\n            };\n          }\n        } else if (payload.key === \"Enter\") {\n          // Si la tecla es \"Enter\", evalúa la expresión\n          return {\n            ...state,\n            overwrite: true,\n            previousOperand: null,\n            operation: null,\n            currentOperand: evaluate(state),\n          };\n        } else if (payload.key === \"Backspace\") {\n          // Si la tecla es \"Backspace\", borra el último dígito\n          return {\n            ...state,\n            currentOperand:\n              state.currentOperand && state.currentOperand.slice(0, -1),\n          };\n        }\n        return state;\n  }\n}\n\nfunction evaluate({ currentOperand, previousOperand, operation }) {\n  const prev = parseFloat(previousOperand)\n  const current = parseFloat(currentOperand)\n  if (isNaN(prev) || isNaN(current)) return \"\"\n  let computation = \"\"\n  switch (operation) {\n    case \"+\":\n      computation = prev + current\n      break\n    case \"-\":\n      computation = prev - current\n      break\n    case \"*\":\n      computation = prev * current\n      break\n    case \"÷\":\n      computation = prev / current\n      break\n  }\n\n  return computation.toString()\n}\n\nconst INTEGER_FORMATTER = new Intl.NumberFormat(\"en-us\", {\n  maximumFractionDigits: 0,\n})\nfunction formatOperand(operand) {\n  if (operand == null) return\n  const [integer, decimal] = operand.split(\".\")\n  if (decimal == null) return INTEGER_FORMATTER.format(integer)\n  return `${INTEGER_FORMATTER.format(integer)}.${decimal}`\n}\n\nfunction App() {\n  const [{ currentOperand, previousOperand, operation }, dispatch] = useReducer(\n    reducer,\n    {}\n  )\n\n  useEffect(() => {\n    const handleKeyPress = (event) => {\n      const key = event.key;\n  \n      if (key >= \"0\" && key <= \"9\") {\n        // Manejar dígitos\n        dispatch({ type: \"key\", payload: { key } });\n      } else if (key === \".\") {\n        // Manejar el punto decimal\n        dispatch({ type: \"key\", payload: { key } });\n      } else if (key === \"Enter\" || key === \"NumpadEnter\") {\n        // Manejar Enter\n        dispatch({ type: \"key\", payload: { key: \"=\" } });\n      } else if (key === \"Backspace\") {\n        // Manejar retroceso\n        dispatch({ type: \"key\", payload: { key: \"Backspace\" } });\n      } else if (key === \"*\") {\n        // Manejar multiplicación\n        dispatch({ type: \"key\", payload: { key: \"*\" } });\n      } else if (key === \"/\") {\n        // Manejar división\n        dispatch({ type: \"key\", payload: { key: \"/\" } });\n      } else if (key === \"+\") {\n        // Manejar suma\n        dispatch({ type: \"key\", payload: { key: \"+\" } });\n      } else if (key === \"-\") {\n        // Manejar resta\n        dispatch({ type: \"key\", payload: { key: \"-\" } });\n      }\n    };\n\n    document.addEventListener(\"keydown\", handleKeyPress);\n\n    return () => {\n      document.removeEventListener(\"keydown\", handleKeyPress);\n    };\n  }, [dispatch]);\n\n  return (\n    <div className=\"calculator-grid\">\n      <div className=\"output\">\n        <div className=\"previous-operand\">\n          {formatOperand(previousOperand)} {operation}\n        </div>\n        <div className=\"current-operand\">{formatOperand(currentOperand)}</div>\n      </div>\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.CLEAR })}\n      >\n        AC\n      </button>\n      <button onClick={() => dispatch({ type: ACTIONS.DELETE_DIGIT })}>\n        DEL\n      </button>\n      <OperationButton operation=\"÷\" dispatch={dispatch} />\n      <DigitButton digit=\"1\" dispatch={dispatch} />\n      <DigitButton digit=\"2\" dispatch={dispatch} />\n      <DigitButton digit=\"3\" dispatch={dispatch} />\n      <OperationButton operation=\"*\" dispatch={dispatch} />\n      <DigitButton digit=\"4\" dispatch={dispatch} />\n      <DigitButton digit=\"5\" dispatch={dispatch} />\n      <DigitButton digit=\"6\" dispatch={dispatch} />\n      <OperationButton operation=\"+\" dispatch={dispatch} />\n      <DigitButton digit=\"7\" dispatch={dispatch} />\n      <DigitButton digit=\"8\" dispatch={dispatch} />\n      <DigitButton digit=\"9\" dispatch={dispatch} />\n      <OperationButton operation=\"-\" dispatch={dispatch} />\n      <DigitButton digit=\".\" dispatch={dispatch} />\n      <DigitButton digit=\"0\" dispatch={dispatch} />\n      <button\n        className=\"span-two\"\n        onClick={() => dispatch({ type: ACTIONS.EVALUATE })}\n      >\n        =\n      </button>\n    </div>\n  )\n}\n\nexport default App\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}